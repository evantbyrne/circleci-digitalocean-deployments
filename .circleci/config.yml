version: 2
jobs:
  build:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run: ls -Al

      - run:
          name: Install jq
          command: |
            wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
            sudo chmod +rx jq-linux64
            sudo mv jq-linux64 /usr/local/bin/jq

      - run:
          name: Install doctl
          command: |
            wget https://github.com/digitalocean/doctl/releases/download/v1.45.1/doctl-1.45.1-linux-amd64.tar.gz
            tar xf doctl-1.45.1-linux-amd64.tar.gz
            sudo mv doctl /usr/local/bin
            doctl auth init --access-token $DO_ACCESS_TOKEN

      - run:
          name: Create droplet
          command: |
            droplet_keys=$(doctl compute ssh-key list --output json | jq "map(.id) | join(\",\")")
            droplet_name="nginx-$CIRCLE_BRANCH-$CIRCLE_BUILD_NUM"
            doctl compute droplet create $droplet_name --image $DO_IMAGE --ssh-keys $droplet_keys --region $DO_REGION --size $DO_SIZE --output json --wait > tmp/create.json
            droplet_ip=$(cat tmp/create.json | jq ".[0].networks.v4[0].ip_address" --raw-output)
            for i in {1..5}; do ssh -q -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null "root@$droplet_ip" "whoami" && break || sleep 5; done
            scp -q -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null public/* $(echo "root@$droplet_ip:/var/www/html")

      - run:
          name: Swap droplets
          command: |
            doctl compute droplet list --output json > tmp/list.json
            droplet_count=$(cat tmp/list.json | jq "map(select(.name | startswith(\"nginx-master-\"))) | length")
            droplet_new_id=$(cat tmp/create.json | jq ".[0].id")
            doctl compute load-balancer add-droplets $DO_LOAD_BALANCER --droplet-ids $droplet_new_id
            if [ $droplet_count -gt 1 ]; then droplet_old_id=$(cat tmp/list.json | jq "map(select(.name | startswith(\"nginx-master-\"))) | sort_by(\".id\") | .[0].id"); fi
            if [ $droplet_count -gt 1 ]; then doctl compute load-balancer remove-droplets $DO_LOAD_BALANCER --droplet-ids $droplet_old_id; fi
            if [ $droplet_count -gt 1 ]; then doctl compute droplet delete $droplet_old_id -f --output json > tmp/delete.json; fi

workflows:
  version: 2
  setup:
    jobs:
      - build
